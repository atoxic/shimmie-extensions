* Photo Notes

Note: coordinates are relative to image (actually, the image container)

Two tables

notes: contain actual note data
	-id: note id
	-text: note text
	-user: id of user
	-date: date when note was added
	-group: group id of note (if not is changed it will have same id)
	-x:
	-y: coordinates of the note
	-w:
	-h: dimensions of the note
	
image_notes:
	-image_id: id of image
	-note_id: id of the note GROUP
	
AJAX events

/note_add/image_id
	-image_id: id of image to initialize this note to
	-returns the id of the note that was added if succeeded, -1 if failed
	
/note_add/id/x/y/w/h/text
	-id: id of image
	-x:
	-y: coordinates of the note
	-w:
	-h: dimensions of the note
	-text: note text
	-returns the id of the note that was added if succeeded, -1 if failed

/note_change/id/x/y/w/h/text
	-id: id of old note
	-x:
	-y: coordinates of the note
	-w:
	-h: dimensions of the note
	-text: note text
	-returns the id of the note that was added if succeeded, -1 if failed
	
/note_remove/id
	-id: id of note to replace
	-returns 1 if succeeded, -1 if failed

* Scanlation Extensions

One table

slext_cache: keeps track of stage progress
	-image_id: the image that this particular event is associated with
	-stage: the stage (as TINYINT index of SLExt::$stages)
	-chapter: the chapter tag

AJAX events

/stage_change/
Form info:
	-stage: the stage to change the image to
	-image_id: the id of the image

/stage_upload/
Form info:
	-stage: the stage of the new image
	-image_id: the id of the old image
	-file: the image file